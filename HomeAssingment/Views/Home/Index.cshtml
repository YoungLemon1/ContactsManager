@model List<HomeAssignment.Models.Contact>;

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>

    function RouteToContactDetails(id) {
        window.location.href = '@Url.Action("Index", "ContactDetails")' + '?id=' + id;
    }

    function RouteToNewContact() {
        window.location.href = '@Url.Action("Index", "NewContact")';
    }

    function ResetAllCheckboxes() {
        $('.contacts-body input[type="checkbox"]').prop('checked', false);
    }

    function DeleteContacts() {
        var markedRows = $('.contacts-body input[type="checkbox"]:checked').closest('tr'); 
        var numEntries = markedRows.length;
        if (numEntries > 0) {
            var message = 'Are you sure you want to delete ' + numEntries + ' entry(s)?';
            if (confirm(message)) {
                var masterCheckboxChecked = $('#master-checkbox').is(':checked');
                if(masterCheckboxChecked)
                {
                    $.ajax({
                        url: '@Url.Action("DeleteAllContacts")',
                        success: function () {
                            alert('Success');
                            window.location.reload();
                        },
                        error: function () {
                            alert('Error deleting contacts.');
                        }
                    });
                }
                else
                {
                    var ids = [];
                    console.log(markedRows); // check if markedRows has the expected rows
                    markedRows.each(function () {
                        console.log($(this).attr('id')); // check if this gives the expected id
                        ids.push($(this).attr('id'));
                    });
                    console.log(ids);
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("DeleteMarked")',
                        data: JSON.stringify(ids),
                        contentType: 'application/json; charset=utf - 8',
                        success: function () {
                            alert('Success');
                            window.location.reload();
                        },
                        error: function () {
                            alert('Error deleting contacts.');
                        }
                    });
                }
                ResetAllCheckboxes();  
            }
        } 
        else {
            alert('Please select at least one entry to delete.');
        }
    }
    //Route to contact details
    $(document).ready(function () {
        $('td:not(.checkbox-cell)').click(function () {
            var id = $(this).parent().attr('id');
            RouteToContactDetails(id)
        })
    });
    //checkbox checked/uncheked
    $(document).ready(function () {
        $('.contacts-body td.checkbox-cell input[type="checkbox"]').change(function () {
            var checked = $(this).prop('checked');
            var tr = $(this).closest('tr').get(0);
            checked ? tr.classList.add("selected") : tr.classList.remove("selected");
        });
    });

    //master checkbox checked/uncheked
    $(document).ready(function () {
        // Synchronize checkbox state
        $('#master-checkbox').change(function () {
            var checked = $(this).is(':checked');
            $('.contacts-body input[type="checkbox"]').prop('checked', checked).trigger('change');
        });
    });

    // Enable/disable delete button
    $(document).ready(function () {
        $('.contacts-body input[type="checkbox"]').change(function () {
            var isSomeChecked = $('.contacts-body input[type="checkbox"]:checked').length > 0;
            $('#delete-btn').prop('disabled', !isSomeChecked);
            var isNotChecked = !$(this).is(':checked');
            var isMasterChecked = $('#master-checkbox').is(':checked');
            if (isMasterChecked && isNotChecked) {
                $('#master-checkbox').prop('checked', false);
            }
        });
    });

    // reset the state of the checkbox once the route has changed
    $(document).ready(function () {
        $('.route-changer, td:not(.checkbox-cell)').click(function () {
        ResetAllCheckboxes();
        });
    });
</script>

<h3>Contacts Page</h3>
<table border="1" class="table table-bordered table-responsive">
    <thead>
        <tr class="table-primary">
            <th id="master-checkbox-cell" class="checkbox-cell"><input id="master-checkbox" type="checkbox" /></th>
            <th>ID</th>
            <th>First Name</th>
            <th>Last Name</th>
        </tr>
    </thead>
    <tbody class="contacts-body">
        @{
            foreach (var contact in Model)
            {
                                        <tr id="@contact.Id">
                                            <td class="checkbox-cell"><input type="checkbox" /></td>
                                            <td>@contact.Id</td>
                                            <td>@contact.FirstName</td>
                                            <td>@contact.LastName</td>
                                        </tr>
            }
        }
    </tbody>
</table>


<button id="new-contact-btn" class="btn btn-primary route-changer" onclick="RouteToNewContact()">+ New Contact</button>
<button id="delete-btn" class="btn btn-danger" onclick="DeleteContacts()" disabled>Delete</button>